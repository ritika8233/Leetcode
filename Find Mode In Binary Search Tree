/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode* root,map<int,int> &m){
        if(root){
            m[root->val]++;
            util(root->left,m);
            util(root->right,m);
        }
    }
    vector<int> findMode(TreeNode* root) {
       vector<int> v;
        if(!root){
            return v;
        }
        if(!root->left && !root->right){
            v.push_back(root->val);
            return v;
        }
        map<int,int> m;
        util(root,m);
        int frq=INT_MIN;
        for(auto itr=m.begin();itr!=m.end();itr++){
          frq = max(frq,itr->second);
        }
        for(auto itr=m.begin();itr!=m.end();itr++){
            if(itr->second == frq)
            v.push_back(itr->first);
        }
        return v;
    }
};
