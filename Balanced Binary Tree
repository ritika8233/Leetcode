/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root){
        if(!root){
            return 0;
        }
        return max(height(root->left),height(root->right))+1;
    }
    void util(TreeNode* root,int &flag){
        if(root){
            int l = height(root->left);
            int r = height(root->right);
            int ans = abs(l-r);
            if(ans > 1){
                flag = 1;
              return ;
            }
            util(root->left,flag);
            util(root->right,flag);
        }
    }
    bool isBalanced(TreeNode* root) {
        if(!root || (!root->left && !root->right)){
            return true;
        }
        int flag = 0;
        util(root,flag);
        if(flag == 1){
            return false;
        }
        return true;
    }
};
