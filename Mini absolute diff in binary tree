/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int util(int p,TreeNode* root){
        int res=INT_MAX;
        if(root){
          res = min(res,abs(p-root->val));
           res=min(res,util(p,root->left));
            res=min(res,util(p,root->right));
        }
        return res;
    }
    int getMinimumDifference(TreeNode* root) {
        if(!root ||(!root->left && !root->right)) return INT_MAX;
        int ans=INT_MAX;
        if(!root->left){
            ans=min(ans,util(root->val,root->right));
            ans=min(ans,getMinimumDifference(root->right));
        }
       else if(!root->right){
            ans=min(ans,util(root->val,root->left));
           ans=min(ans,getMinimumDifference(root->left));
        }
        else{
            ans=min(ans,util(root->val,root->left));
            ans=min(ans,util(root->val,root->right));
            ans=min(ans,getMinimumDifference(root->right));
            ans=min(ans,getMinimumDifference(root->left));
        }
        return ans;
    }
};
