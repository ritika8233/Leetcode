/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(!headA || !headB) return NULL;
        int l1=1,l2=1;
        ListNode *curr1=headA,*curr2=headB;
        while(curr1){
            l1++;
            curr1=curr1->next;
        }
         while(curr2){
            l2++;
            curr2=curr2->next;
        }
        int d=0;
        curr1=headA,curr2=headB;
        if(l1 > l2){
            d=l1-l2;
            while(d-- && curr1){
                curr1=curr1->next;
            }
        }
         if(l1 < l2){
             d=l2-l1;
             while(d-- && curr2){
                curr2=curr2->next;
            }
         }
        while(curr1 && curr2){
            if(curr1==curr2){
                return curr1;
            }
            curr1=curr1->next;
            curr2=curr2->next;
        }
        return NULL;
    }
};
