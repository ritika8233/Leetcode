/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode *root,vector<int> &v,int &height,int l){
        if(!root)return;
        if(height<l){
            v.push_back(root->val);
            height++;
        }else{
            v[l-1]=max(v[l-1],root->val);
        }
        util(root->left,v,height,l+1);
        util(root->right,v,height,l+1);
    }
    vector<int> largestValues(TreeNode* root) {
        vector<int> v;
        if(!root)return v;
        if(root && !root->left && !root->right){
            v.push_back(root->val);
            return v;
        }
        int height=0;
        util(root,v,height,1);
        return v;
    }
};
