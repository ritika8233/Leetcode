/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
public:
    void util(vector<int> &v, Node* curr){
        if(!curr){
            return;
        }
        v.push_back(curr->val);
        if(curr->child){
            util(v, curr->child);
        }
        if(curr->next){
            util(v, curr->next);
        }
    }
    Node* flatten(Node* head) {
        if(!head){
            return head;
        }
        vector<int> v;
        Node *curr = head;
        util(v, curr);
        Node *dummy = new Node(v[0]);
        Node *temp = dummy;
        for(int i = 1; i < v.size(); i++){
            Node *node = new Node(v[i]);
            temp->next = node;
            node->prev = temp;
            temp = temp->next;
        }
        
        return dummy;
    }
};
