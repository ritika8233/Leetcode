/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
       vector<vector<int>> ans;
        if(!root) return ans;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        TreeNode *temp=NULL;
         vector<int> v;
        while(!q.empty()){
            temp=q.front();

            if(temp==NULL){
                if(q.size() > 1) q.push(NULL);
                ans.push_back(v);
                v.clear();
            }
            else{
                 v.push_back(temp->val);
                if(temp->left){
                    q.push(temp->left);
                }
                 if(temp->right){
                    q.push(temp->right);
                }
            }
         q.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
