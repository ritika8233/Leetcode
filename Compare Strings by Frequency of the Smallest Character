class Solution {
public:
    vector<int> numSmallerByFrequency(vector<string>& q, vector<string>& w) {
        vector<int> v1(q.size());
        vector<int> v2(w.size());
        vector<int> ans;

        for(int i = 0; i < q.size(); i++){
            vector<int> v(26,0);
            int temp = 0;
            for(int j = 0; j < q[i].size(); j++){
                v[q[i][j] - 'a']++;
            }
            for(int j = 0; j < 26; j++){
                if(v[j] != 0){
                    temp = v[j];
                    break;
                }
            }
            v1[i] = temp;
        }
        for(int i = 0; i < w.size(); i++){
            vector<int> v(26,0);
            int temp = 0;
            for(int j = 0; j < w[i].size(); j++){
                v[w[i][j] - 'a']++;
            }
            for(int j = 0; j < 26; j++){
                if(v[j] != 0){
                    temp = v[j];
                    break;
                }
            }
            v2[i] = temp;
        }

        sort(v2.begin(), v2.end());
        int n = v2.size();
        for(int i = 0; i < v1.size(); i++){
             int l = 0;
             int h = n-1;
            int t = -1;
            while(l <= h){
                int m = l + (h - l)/2;
                if( v2[m] == v1[i]+1 ){
                    t = m;
                    h = m-1;
                }
                else if(v2[m] > v1[i]+1) h = m-1;
                else l = m+1;
            }
            if(t == -1){
                t = l;
            }
            ans.push_back(n-t);
        }

        return ans;
    }
};
