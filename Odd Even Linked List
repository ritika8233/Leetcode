/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL){
            return NULL;
        }
        ListNode *fast=head,*slow=head->next;
       ListNode *dummy=fast;
        while(fast!=NULL&& fast->next!=NULL){
            ListNode *temp=fast->next;
            fast->next=fast->next->next;
            fast=temp;
           }
        while(dummy->next!=NULL){
            dummy=dummy->next;
        }
        dummy->next=slow;
        return head;
    }
};
