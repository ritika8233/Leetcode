/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util1(TreeNode* root,int x,int l,int &h,stack<int>& s,int &flag){
        if(!root)return;
        s.push(root->val);
        if(root->val==x){
            h=l;
            flag=1;
            return;
            }
        if(root->left && flag==0){
       util1(root->left,x,l+1,h,s,flag);
        }
        if(root->right && flag==0){
            while(s.top()!=root->val){
                s.pop();
            }
       util1(root->right,x,l+1,h,s,flag);
        }
    }
    bool isCousins(TreeNode* root, int x, int y) {
      int h1=0,h2=0;
        int flag=0;
        stack<int> s1,s2;
        util1(root,x,0,h1,s1,flag);
        flag=0;
        util1(root,y,0,h2,s2,flag);
        if(h1==h2){
            s1.pop();
            s2.pop();
            if(s1.top()==s2.top()){
                return false;
            }
         return true;
        }
        return false;
    }
};
