/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int util(TreeNode* root){
        int sum=0;
        if(root){
            sum+=root->val;
            sum+=util(root->left);
            sum+=util(root->right);
        }
        //cout<<abs(sum)<<" ";
        return sum;
    }
    int findTilt(TreeNode* root) {
        int ans=0;
        if(!root|| (!root->left && !root->right)) return 0;
        if(!root->left){
         ans += abs(util(root->right));
         ans+=findTilt(root->right);
        }
        else if(!root->right){
            ans += abs(util(root->left));
            ans+=findTilt(root->left);
        }
        else{
            ans+=abs(util(root->left)-util(root->right));
            ans+=findTilt(root->left);
            ans+=findTilt(root->right);
        }
        return ans;
    }
};
