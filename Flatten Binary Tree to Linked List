/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode *curr, vector<int> &v){
        if(!curr){
            return;
        }
        v.push_back(curr->val);
        util(curr->left, v);
        util(curr->right, v);
    }
    void flatten(TreeNode* root) {
        if(!root)return;
        vector<int> v;
        util(root, v);
        root->left = NULL;
        root->right = NULL;
        
        for(int i = 1; i < v.size(); i++){
            TreeNode *temp = new TreeNode(v[i]);
            root->right = temp;
            root = root->right;
        } 
    }
};
