/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode *root,vector<int> &v){
        if(root){
            util(root->left,v);
            if(root && !root->left && !root->right){
                v.push_back(root->val);
            }
            util(root->right,v);
        }
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> v1,v2;
        util(root1,v1);
        util(root2,v2);
        int i=0,j=0;
        if(v1.size()!=v2.size()){
            return false;
        }
        for(i=0,j=0;i<v1.size() && j<v2.size();i++,j++){
          if(v1[i]!=v2[j]) return false;
        }
        return true;
    }
};
