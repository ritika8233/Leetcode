/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode* root,vector<int> v,int &c){
        if(!root->left && !root->right){
            v.push_back(root->val);
            int arr[10]={0};
            int odd=0;
            for(int i=0;i<v.size();i++){
                arr[v[i]]++;
            }
            for(int j=0;j<10;j++){
                if(arr[j]%2!=0){
                    odd++;
                }
            }
            if(odd==1||odd==0){
                c++;
            }
            v.pop_back();
            return;
        }
          v.push_back(root->val);
        if(root->left)
        util(root->left,v,c);
        if(root->right)
        util(root->right,v,c);
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        if(!root->left && !root->right){
            return 1;
        }
        vector<int> v;
        int c=0;
        v.push_back(root->val);
        if(root->left)
        util(root->left,v,c);
        v.clear();
        v.push_back(root->val);
        if(root->right)
        util(root->right,v,c);
       
        return c;
    }
};
