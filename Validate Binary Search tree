/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool util(TreeNode* root,int &temp,int &flag){
        if(!root ){
            return true;
        }
        bool l=util(root->left,temp,flag);
        if(flag==0 && root->val==temp){

        }
        else if(root->val <= temp){
                return false;
        }
        flag=1;
        temp=root->val;
        bool r=util(root->right,temp,flag);
        if((l==false) || (r==false)){
            return false;
        }
        return true;
    }
    bool isValidBST(TreeNode* root) {
        if(!root || (!root->left && !root->right)){
            return true;
        }
        int temp=INT_MIN;
        int flag=0;
        return util(root,temp,flag);
    }
};
