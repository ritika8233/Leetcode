class Solution {
public:
    bool isNStraightHand(vector<int>& v, int k) {
        int n = v.size();
        if(n % k != 0)return false;
        
        map<int, int> m;
        
        for(int i = 0; i < n; i++){
            m[v[i]]++;
        }
        if(m.size() < k){
            return false;
        }
        int c = 0, temp1 = 0, p = k, temp2 = 0;
        
        for(auto itr = m.begin(); itr != m.end(); itr++){
            temp1 = itr->second;
            temp2 = itr->first;
            c++;
            if(temp1 > 0){
            p = k;
            int c2 = c-1;
               for(auto itr2 = m.begin(); itr2 != m.end(); itr2++){
                   if(c2 > 0){
                       c2--;
                       continue;
                   }
                   if(p > 0){
                        if(itr2->first - temp2 > 1){
                           return false;
                       }
                       temp2 = itr2->first;
                       if(itr2->second - temp1 < 0){
                           return false;
                           };
                       itr2->second -= temp1;
                       p--;
                   }
                   else{
                        break;
                   }
               }   
            }
        }
       if(p != 0)return false;
        return true;
    }
};
