/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* root, int k) {
        vector<ListNode*> v(k,NULL);
        if(!root)return v;
        ListNode *curr=root;
        int n=0;
        while(curr){
            n++;
            curr=curr->next;
        }
        curr=root;
        int q=n/k;
        int r=n%k;
        ListNode *prev=NULL;
        for(int i=0;i<k;i++,r--){
            v[i]=root;
            for(int j=0;j<q+(r>0);j++){
                prev=root;
                root=root->next;
            }
            if(prev)prev->next=NULL;
        }
        return v;
    }
};
