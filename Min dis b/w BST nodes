/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void util(TreeNode* root,vector<int>& ans){
        if(root){
            ans.push_back(root->val);
            util(root->left,ans);
            util(root->right,ans);
        }
    }
    int minDiffInBST(TreeNode* root) {
       vector<int> ans;
        util(root,ans);
        int d=INT_MAX;
        sort(ans.begin(),ans.end());
        for(int i=0;i<(ans.size())-1;i++){
            d=min(d,abs(ans[i]-ans[i+1]));
        }
        return d;
    }
};
